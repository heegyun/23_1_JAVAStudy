제어문
	1] 주 제어문
		1) 조건문 : if, if~else, if~else if~else	
		2) switch~case문
		3) 반복문: for문, while문, do~while문
	 
	2] 보조 제어문 : 단독으로 쓰이지는 못하고 주 제어문과 함께 사용된다.
		1) break 문
		2) continue 문
1. if 문
"돈이 있으면 택시를 타고 가고 돈이 없으면 걸어 간다."
위와 같은 상황은 우리 주변에서 언제든지 일어 날 수 있는 상황중의 하나이다. 프로그래밍도 위처럼 조건을 판단해서 
그 상황에 맞게 처리해야 할 경우가 생기게 된다. 조건을 판단하여 해당 조건에 맞는 상황을 수행하는데 쓰이는 것이 바로 if문이다.
위와 같은 상황은 다음과 같이 코딩할수 있다.
boolean money = true;
if (money) {
    System.out.println("택시를 타고 가라");
}else {
    System.out.println("걸어가라");
}
if문의 기본 구조
if 문과 else 문의 기본구조는 다음과 같다.
if (조건문) {
    <수행할 문장1>;
    <수행할 문장2>;
    ...
} else {
    <수행할 문장A>;
    <수행할 문장B>;
    ...
}
조건문을 테스트 해서 참이면 if문에 속한 문장들을 수행하고 조건문이 거짓이면 else문에 속한 문장들을 수행한다.
조건문이란 무엇인가?
- if (조건문)에 사용한 조건문은 참과 거짓을 판단하는 문장이다.
즉, 위의 예에서 보았던 money가 조건문이 된다.
boolean money = true;
if (money) {
...
money는 true이기 때문에 if문에 속한 문장들이 수행될 것이다.
- 비교연산자

조건판단에 사용되는 비교 연산자(<, >, ==, !=, >=, <=)에 대해서 알아보자.

다음은 자바의 비교 연산자들이다.
======================
비교연산자	설명
======================
x < y	x가 y보다 작다
x > y	x가 y보다 크다
x == y	x와 y가 같다
x != y	x와 y가 같지 않다
x >= y	x가 y보다 크거나 같다
x <= y	x가 y보다 작거나 같다
==============================

2. while문: 문장을 반복해서 수행해야 할 경우에 사용한다.
while문의 기본 구조
// 1. 초기값
 while (조건문) { // 2. 종료조건
    <수행할 문장1>; //3. 반복 문장
    <수행할 문장2>;
    <수행할 문장3>; // 4. 증감스텝값
    ...
}
조건문이 참인 동안 while문의 수행할 문장들을 반복하여 수행한다.
“열 번 찍어 안 넘어 가는 나무 없다” 라는 속담을 자바로 코딩하면 다음과 같이 될 것이다.
int treeHit = 0;
while (treeHit < 10) {
    treeHit++;
    System.out.println("나무를  " + treeHit + "번 찍었습니다.");
    if (treeHit == 10) {
        System.out.println("나무 넘어갑니다.");
    }
}
----------------------------------------------------
3. for문 예제
String[] numbers = {"one", "two", "three"};
for(int i=0; i<numbers.length; i++) {
    System.out.println(numbers[i]);
}

----------for문의 구조-----------------------
for (초기치; 조건문; 증가치) {
    ...
}
----------------------------------

