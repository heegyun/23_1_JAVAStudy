- URL을 이용한 HTTP 연결 프로그래밍
• 보통 웹 서버는 항시 접근이 가능하다.
• 보안 및 동시 다중 접속자가 일으키는 성능 문제가 발생할 가능성이 적다. 보통 개발자가 직접 만드는 서버 프로그램은 불안정하며, 오류가 발생하기 쉽다.
• SSLSecure Socket Layer을 이용하여 클라이언트와 서버 사이의 메시지 전송을 암호화하기 쉽다.
• OAuth2 등 검증된 인증 솔루션과 결합하기 쉽다.
• 기존 Java, JSP 개발자들이 서버 응용 프로그램을 쉽게 개발할 수 있다.
• 웹 기반이므로 개발된 웹 서비스들을 스마트폰 등 다른 클라이언트의 애플리케이션에 제공하기 쉽다.

[URL 구조]
• 프로토콜://도메인(IP 주소):포트/서브 디렉터리/자원 이름

- URL 클래스와 메소드
메소드                                                               설명
URL(String spec)                                               문자열 정보를 이용하여 URL객체를 생성한다.
URL(String protocol,String host, int port, String file)        프로토콜, 호스트, 포트, 경로를 포함한 파일 이름 등 문자열 파라미터를 이용하여 URL객체를 생성한다.
String getProtocol()                                            현재 URL 서버의 프로토콜 정보를 가져온다. getPath(), getPort(), getHost(), getFile()
URLConnection openConnection()                                  네트워크 연결을 처리하는 URLConnection 객체를 리턴한다.
InputStream openStream()                                        입력스트림으로 데이터를 전송받는다.


- TCP/IP소켓 프로그래밍
• TCP/IP는 Transmission Control Protocol/Internet Protocol의 약어로, 네트워크 시스템의 체계를 정리한 통신 프로토콜을 말한다.

[Socket/ServerSocket 클래스]
• Socket 클래스:클라이언트에서 서버에 접속하는 데 필요
• ServerSocket 클래스: 프로그램이 서버로 동작하면서 클라이언트의 연결을 받는데 필요.

