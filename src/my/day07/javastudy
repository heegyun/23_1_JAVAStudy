----------*** interface 작성 방법 ---------------------------------------------------------------
객체의 역할을 묶는 단위임
위 코드와 같이 인터페이스는 class가 아닌 interface 라는 키워드를 이용하여 작성한다.
인터페이스 구현은 implements 라는 키워드를 사용한다.
인터페이스의 메소드는 이름만 있고 그 내용은 없다.
멤버가 추상메소드+ 상수로만 구성됨.
----------------------------------------------------------------------------------------------------
그리고 Tiger, Lion 은 작성한 인터페이스를 구현하도록 변경한다.
public class Tiger extends Animal implements Predator { }
public class Lion extends Animal implements Predator { }

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
※ 객체가 한 개 이상의 자료형 타입을 갖게 되는 특성을 다형성(폴리모피즘)이라고 한다.
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


public interface Predator {
    public String getName();
}

-----------------------------------------------------------------------------------------------------------------
자바의 입출력(IO)
1. 파일 입출력
- 데이터를 파일로부터 입력받거나 파일에 출력하는 것으로 
- 데이터 보존을 목적으로 함(실행 중인 프로그램 속 데이터는 사라지기 때문)
- 파일(file)이란 데이터 관리를 위한 논리적 단위
- 파일화된 데이터는 스토리지(storage)에 의해 반영구적 보존이 가능

2. 파일 입출력 기본 API
- 자바는 파일 입출력을 위한 API를 java.io 패키지에 담아 제공
- 가장 기본이 되는 클래 스는 File, FileWriter, FileReader 등

2.1  File 클래스
- File은 물리적 파일을 참조하기 위한 클래스
- 파일 경로를 지정해 객체를 만들 수 있고 이를 통해 다양한 기능을 제공
2.2 FileWriter 클래스
- FileWriter는 파일에 문자 출력을 가능케 하는 클래스
- File 객체 또는 파일 경로를 지정해 객체를 만들 수 있으며, 다양한 기능을 제공
- void write(String s), void write(char[] buf), close()
2.3 FileReader 클래스
- FileReader는 파일로부터 문자 입력을 받아오는 클래스
- File 객체 또는 파일 경로를 지정해 객체를 만들 수 있으며, 다양한 기능을 제공
- int read(), int read(char[] buf), close()









----------------------------------------------------------------------------------------------------------------
